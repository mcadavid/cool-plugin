package net.eulerproject.problemNo2;

public class SumOfEvenFibonacciNumbers {

	/**
	 * Each new term in the Fibonacci sequence is generated by adding the
	 * previous two terms. By starting with 1 and 2, the first 10 terms will be:
	 * 
	 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	 * 
	 * By considering the terms in the Fibonacci sequence whose values do not
	 * exceed four million, find the sum of the even-valued terms.
	 */
	public static void main(String[] args) {

		int limit = 4000000;
		int fib = 0;
		int beforeLastFib = 1;
		int lastFib = 2;
		int sum = 2;
		System.out.println(beforeLastFib);
		System.out.println(lastFib);
		while ((fib = beforeLastFib + lastFib) < limit) {

			beforeLastFib = lastFib;
			lastFib = fib;
			if (fib % 2 == 0) {
				sum = fib + sum;
			}
			System.out.println(fib + "--" + sum);
		}

		int limit2 = 4000000;
		int sum2 = 0;
		int a = 1;
		int b = 1;
		int c = a + b;
		while (c < limit) {
			sum2 = sum2 + c;
			a = b + c;
			b = c + a;
			c = a + b;
		}
		System.out.println(sum);

	}

}
